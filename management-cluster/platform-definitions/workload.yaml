apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: workload
  namespace: platform-definitions
spec:
  schema:
    apiVersion: v1alpha1
    kind: Workload
    spec:
      name: string
      repository: string
      region: string
      kubernetesVersion: string | default="1.31.7"
      nodeSKU: string | default="standard_b2s_v2"

  resources:
    - id: resourceGroup
      template:
        apiVersion: resources.azure.com/v1api20200601
        kind: ResourceGroup
        metadata:
          name: ${schema.spec.name}-rg
        spec:
          location: ${schema.spec.region}

    - id: cluster
      template:
        apiVersion: containerservice.azure.com/v1api20240901
        kind: ManagedCluster
        metadata:
          name: ${schema.spec.name}-aks
        spec:
          location: "westeurope"
          nodeResourceGroup: ${schema.spec.name}-nodes-rg
          sku:
            name: "Base"
            tier: "Free"

          owner:
            name: "${schema.spec.name}-rg"

          dnsPrefix: "${schema.spec.name}-dns"
          
          kubernetesVersion: "${schema.spec.kubernetesVersion}"

          networkProfile:
            networkPlugin: azure
            networkPluginMode: overlay

          identity:
            type: SystemAssigned

          agentPoolProfiles:
            - name: nodepool1
              count: 1
              vmSize: "${schema.spec.nodeSKU}"
              osType: Linux
              mode: System
              availabilityZones:
                - "1"
                - "2"
                - "3"

    - id: bootstrapJob
      template:
        apiVersion: batch/v1
        kind: Job
        metadata:
          name: ${schema.spec.name}-bootstrap-job
        spec:
          backoffLimit: 99999
          completions: 1
          template:
            spec:
              restartPolicy: Never
              volumes:
              - name: flux-key
                secret:
                  secretName: flux-key

              containers:
              - name: azure-cli
                image: ghcr.io/mickvdv/azure-cli-k8s:main
                imagePullPolicy: Always
                envFrom:
                - secretRef:
                    name: service-principal

                volumeMounts:
                - name: flux-key
                  mountPath: /app/ssh-key/

                command:
                - bash
                - -c

                args:
                - az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID;
                  az aks get-credentials --resource-group ${schema.spec.name}-rg --name ${schema.spec.name}-aks --overwrite-existing;
                  kubectl get nodes;
                  flux bootstrap git -s --url=${schema.spec.repository} --private-key-file=/app/ssh-key/identity --path="./${schema.spec.name}-gitops"
